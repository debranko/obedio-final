# =================================================================
# OBEDIO MQTT System - Redis Configuration
# Optimized for MQTT Admin API caching and session management
# =================================================================

# Basic Configuration
# =================================================================
# Redis runs on port 6379 by default
port 6379

# Bind to all interfaces within Docker network
bind 0.0.0.0

# Protected mode (disabled for Docker internal network)
protected-mode no

# TCP listen backlog
tcp-backlog 511

# TCP keepalive
tcp-keepalive 300

# Timeout for idle connections (0 = disabled)
timeout 0

# =================================================================
# Memory Management
# =================================================================

# Maximum memory usage (256MB - adjust based on requirements)
maxmemory 256mb

# Memory eviction policy - LRU for all keys when memory limit is reached
maxmemory-policy allkeys-lru

# =================================================================
# Persistence Configuration
# =================================================================

# Enable AOF (Append Only File) for better durability
appendonly yes
appendfilename "appendonly.aof"

# AOF fsync policy
appendfsync everysec

# Rewrite AOF when it grows by this percentage
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# Enable RDB snapshots as backup
save 900 1
save 300 10
save 60 10000

# RDB file name
dbfilename dump.rdb

# Working directory
dir /data

# =================================================================
# Logging
# =================================================================

# Log level (debug, verbose, notice, warning)
loglevel notice

# Log file (empty string for stdout)
logfile ""

# =================================================================
# Performance Optimization
# =================================================================

# Disable dangerous commands
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command KEYS ""
rename-command CONFIG ""
rename-command DEBUG ""
rename-command EVAL ""
rename-command SHUTDOWN SHUTDOWN_MQTT_REDIS

# Hash optimization
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List optimization
list-max-ziplist-size -2
list-compress-depth 0

# Set optimization
set-max-intset-entries 512

# Sorted set optimization
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# =================================================================
# Network and Connection Settings
# =================================================================

# Max number of clients
maxclients 100

# Client output buffer limits
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# =================================================================
# Security
# =================================================================

# Disable dangerous commands in production
# rename-command EVAL ""
# requirepass your_redis_password_here

# =================================================================
# Database Configuration
# =================================================================

# Number of databases (default is 16, we use fewer for MQTT system)
databases 4

# Database 0: Session storage
# Database 1: Device cache
# Database 2: MQTT message cache
# Database 3: Analytics cache

# =================================================================
# Slow Log Configuration
# =================================================================

# Log queries slower than 10 milliseconds
slowlog-log-slower-than 10000

# Keep last 128 slow queries
slowlog-max-len 128

# =================================================================
# Latency Monitoring
# =================================================================

# Enable latency monitoring
latency-monitor-threshold 100

# =================================================================
# Module and Extension Settings
# =================================================================

# Load modules if needed (none for basic MQTT setup)
# loadmodule /path/to/module.so

# =================================================================
# Notifications and Events
# =================================================================

# Keyspace notifications (disabled by default for performance)
# Enable only if needed for MQTT admin features
# notify-keyspace-events ""

# =================================================================
# Advanced Configuration
# =================================================================

# HyperLogLog sparse representation bytes limit
hll-sparse-max-bytes 3000

# Active rehashing
activerehashing yes

# AOF rewrite incremental fsync
aof-rewrite-incremental-fsync yes

# RDB checksum
rdbchecksum yes

# Stop writes if RDB/AOF errors
stop-writes-on-bgsave-error yes

# Compress string objects using LZF
rdbcompression yes

# =================================================================
# Replication Settings (for future HA setup)
# =================================================================

# Master/replica authentication
# masterauth <password>
# requirepass <password>

# Replica settings
replica-serve-stale-data yes
replica-read-only yes
repl-diskless-sync no
repl-diskless-sync-delay 5

# =================================================================
# Comments and Documentation
# =================================================================

# This Redis configuration is optimized for:
# - MQTT session management
# - Device state caching
# - Message queuing and buffering
# - Real-time analytics data
# - Low latency operations
#
# Memory usage is limited to 256MB with LRU eviction
# Persistence is enabled with both AOF and RDB
# Dangerous commands are disabled for security
#
# For production deployment:
# 1. Set a strong password with requirepass
# 2. Enable TLS if needed
# 3. Adjust memory limits based on usage
# 4. Enable keyspace notifications if needed
# 5. Configure replication for high availability