# =================================================================
# Obedio MQTT Access Control List (ACL) Configuration
# =================================================================

# Default access rules
# Deny all access by default, then grant specific permissions

# =================================================================
# Admin User Permissions
# =================================================================
user mqtt-admin
topic readwrite obedio/#
topic readwrite $SYS/#

# =================================================================
# Device Group Permissions
# Pattern-based ACL using username substitution
# Device usernames should follow: {site}-{room}-{type}-{device_id}
# Example: yacht1-deck3-button-btn001
# =================================================================

# Button devices - can publish status/press events, subscribe to commands
pattern read obedio/%u/cmd/#
pattern write obedio/%u/status
pattern write obedio/%u/press
pattern write obedio/%u/heartbeat
pattern write obedio/%u/battery

# Smart watch devices - similar to buttons but with additional location data
pattern read obedio/%u/cmd/#
pattern write obedio/%u/status
pattern write obedio/%u/location
pattern write obedio/%u/heartbeat
pattern write obedio/%u/battery
pattern write obedio/%u/emergency

# Repeater devices - can read/write mesh network data
pattern read obedio/%u/cmd/#
pattern write obedio/%u/status
pattern write obedio/%u/mesh/#
pattern write obedio/%u/heartbeat
pattern write obedio/%u/health

# =================================================================
# Service Account Permissions
# =================================================================

# Backend API service
user obedio-api-service
topic readwrite obedio/#
topic read $SYS/broker/clients/connected
topic read $SYS/broker/clients/disconnected
topic read $SYS/broker/messages/#
topic read $SYS/broker/uptime

# Provisioning service
user obedio-provision-service
topic readwrite obedio/+/+/+/+/provision
topic readwrite obedio/system/provision/#
topic read obedio/+/+/+/+/status

# =================================================================
# System Topics
# =================================================================

# Allow all authenticated users to access system status
topic read obedio/system/status
topic read obedio/system/time

# Provisioning requests (temporary access during device setup)
topic readwrite obedio/system/provision/request
topic readwrite obedio/system/provision/response

# =================================================================
# Emergency and Priority Topics
# =================================================================

# Emergency broadcasts - all devices can read, only emergency devices can write
topic read obedio/+/emergency/broadcast
pattern write obedio/%u/emergency/alert

# System-wide alerts
topic read obedio/system/alert/#

# =================================================================
# Logging and Monitoring
# =================================================================

# Device telemetry (read-only for monitoring systems)
user obedio-monitor
topic read obedio/+/+/+/+/status
topic read obedio/+/+/+/+/heartbeat
topic read obedio/+/+/+/+/battery
topic read $SYS/#

# =================================================================
# Testing and Development
# =================================================================

# Test user for development (remove in production)
user obedio-test
topic readwrite obedio/test/#
topic read obedio/+/+/+/+/status